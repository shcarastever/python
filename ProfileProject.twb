<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau_1)' inline='true' name='federated.1mi4hnz0an8zll192lcu71mvo2fv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_1' name='excel-direct.0jyxixb0yjhlni1afke0b19pkncn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/chefs/OneDrive/Documents/Tableau_1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0jyxixb0yjhlni1afke0b19pkncn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='deathpercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0jyxixb0yjhlni1afke0b19pkncn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='deathpercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BA71A512F4BD430AB4F45C52B27E7B7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BA71A512F4BD430AB4F45C52B27E7B7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathpercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deathpercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>deathpercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BA71A512F4BD430AB4F45C52B27E7B7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BA71A512F4BD430AB4F45C52B27E7B7B]' role='measure' type='quantitative' />
      <column caption='Deathpercentage' datatype='real' name='[deathpercentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BA71A512F4BD430AB4F45C52B27E7B7B'>
            <properties context=''>
              <relation connection='excel-direct.0jyxixb0yjhlni1afke0b19pkncn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='deathpercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_2)' inline='true' name='federated.048ebbn1of0jio1g41jm102nvqko' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_2' name='excel-direct.1yjk1bm1e9gbgx1f5evdg18pv9j9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/chefs/OneDrive/Documents/Tableau_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1yjk1bm1e9gbgx1f5evdg18pv9j9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B8:no:A1:B8:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='totalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1yjk1bm1e9gbgx1f5evdg18pv9j9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B8:no:A1:B8:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='totalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B8:no:A1:B8:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7485C782EBAF42539E0683C616B7CBB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>totalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7485C782EBAF42539E0683C616B7CBB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7485C782EBAF42539E0683C616B7CBB8]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[totalDeathCount]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ba4c23'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f6ad51'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7485C782EBAF42539E0683C616B7CBB8'>
            <properties context=''>
              <relation connection='excel-direct.1yjk1bm1e9gbgx1f5evdg18pv9j9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B8:no:A1:B8:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='totalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_3)' inline='true' name='federated.06q2qmp08ehbbt1g8wix80aev5na' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_3' name='excel-direct.0al0ywa1hp6flw114pl4h1fjso91'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/chefs/OneDrive/Documents/Tableau_3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0al0ywa1hp6flw114pl4h1fjso91' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D232:no:A1:D232:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentpopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0al0ywa1hp6flw114pl4h1fjso91' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D232:no:A1:D232:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentpopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D232:no:A1:D232:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF2459320F4A415FB42AD924607A48CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF2459320F4A415FB42AD924607A48CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF2459320F4A415FB42AD924607A48CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentpopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentpopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentpopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF2459320F4A415FB42AD924607A48CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Percentpopulation Infected' datatype='real' name='[PercentpopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AF2459320F4A415FB42AD924607A48CD]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_AF2459320F4A415FB42AD924607A48CD'>
            <properties context=''>
              <relation connection='excel-direct.0al0ywa1hp6flw114pl4h1fjso91' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D232:no:A1:D232:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentpopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_4)' inline='true' name='federated.1r2u48e076qqoh1dmuh2n029k70s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_4' name='excel-direct.1ei2bea0co0oq814utg1h0twrd8e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/chefs/OneDrive/Documents/Tableau_4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ei2bea0co0oq814utg1h0twrd8e' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentpopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ei2bea0co0oq814utg1h0twrd8e' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentpopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_827151853C6C4E1D88A6611301F27FDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_827151853C6C4E1D88A6611301F27FDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_827151853C6C4E1D88A6611301F27FDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_827151853C6C4E1D88A6611301F27FDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentpopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentpopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentpopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_827151853C6C4E1D88A6611301F27FDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Percentpopulation Infected' datatype='real' name='[PercentpopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_827151853C6C4E1D88A6611301F27FDC]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_827151853C6C4E1D88A6611301F27FDC'>
            <properties context=''>
              <relation connection='excel-direct.1ei2bea0co0oq814utg1h0twrd8e' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentpopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_1)' name='federated.1mi4hnz0an8zll192lcu71mvo2fv' />
          </datasources>
          <datasource-dependencies datasource='federated.1mi4hnz0an8zll192lcu71mvo2fv'>
            <column caption='Deathpercentage' datatype='real' name='[deathpercentage]' role='measure' type='quantitative' />
            <column-instance column='[deathpercentage]' derivation='Sum' name='[sum:deathpercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mi4hnz0an8zll192lcu71mvo2fv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mi4hnz0an8zll192lcu71mvo2fv].[sum:deathpercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mi4hnz0an8zll192lcu71mvo2fv].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mi4hnz0an8zll192lcu71mvo2fv].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1mi4hnz0an8zll192lcu71mvo2fv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1mi4hnz0an8zll192lcu71mvo2fv].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1mi4hnz0an8zll192lcu71mvo2fv].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1mi4hnz0an8zll192lcu71mvo2fv].[sum:deathpercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1mi4hnz0an8zll192lcu71mvo2fv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1mi4hnz0an8zll192lcu71mvo2fv].[:Measure Names]' value='182' />
            <format attr='height' value='45' />
            <format attr='color' value='#e15759' />
            <format attr='text-format' field='[federated.1mi4hnz0an8zll192lcu71mvo2fv].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1mi4hnz0an8zll192lcu71mvo2fv].[sum:deathpercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#f5f5f5' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1mi4hnz0an8zll192lcu71mvo2fv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='3.2596685886383057' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1mi4hnz0an8zll192lcu71mvo2fv].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F3AB1A88-CD5E-4233-83D1-A6E5A7215385}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_2)' name='federated.048ebbn1of0jio1g41jm102nvqko' />
          </datasources>
          <datasource-dependencies datasource='federated.048ebbn1of0jio1g41jm102nvqko'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[totalDeathCount]' derivation='Sum' name='[sum:totalDeathCount:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death Count' datatype='integer' name='[totalDeathCount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.048ebbn1of0jio1g41jm102nvqko].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;European Union&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.048ebbn1of0jio1g41jm102nvqko].[none:location:nk]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.048ebbn1of0jio1g41jm102nvqko].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='size' value='1.0434806346893311' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.048ebbn1of0jio1g41jm102nvqko].[sum:totalDeathCount:qk]</rows>
        <cols>[federated.048ebbn1of0jio1g41jm102nvqko].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{038312D3-0A13-49F9-9029-885F38F388A5}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_3)' name='federated.06q2qmp08ehbbt1g8wix80aev5na' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.06q2qmp08ehbbt1g8wix80aev5na'>
            <column caption='Percentpopulation Infected' datatype='real' name='[PercentpopulationInfected]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentpopulationInfected]' derivation='Sum' name='[sum:PercentpopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.06q2qmp08ehbbt1g8wix80aev5na].[Longitude (generated)]' field-type='quantitative' max='52991811.22403346' min='25343551.534657858' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.06q2qmp08ehbbt1g8wix80aev5na].[Latitude (generated)]' field-type='quantitative' max='15211831.891711341' min='-14560192.86255298' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.06q2qmp08ehbbt1g8wix80aev5na].[sum:PercentpopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.06q2qmp08ehbbt1g8wix80aev5na].[sum:PercentpopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.06q2qmp08ehbbt1g8wix80aev5na].[none:location:nk]' />
              <color column='[federated.06q2qmp08ehbbt1g8wix80aev5na].[sum:PercentpopulationInfected:qk]' />
              <geometry column='[federated.06q2qmp08ehbbt1g8wix80aev5na].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06q2qmp08ehbbt1g8wix80aev5na].[Latitude (generated)]</rows>
        <cols>[federated.06q2qmp08ehbbt1g8wix80aev5na].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B172BB9B-2538-4E08-BB4F-5DAE6106BFCA}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_4)' name='federated.1r2u48e076qqoh1dmuh2n029k70s' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2u48e076qqoh1dmuh2n029k70s'>
            <column caption='Percentpopulation Infected' datatype='real' name='[PercentpopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentpopulationInfected]' derivation='Avg' name='[avg:PercentpopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentpopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentpopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentpopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1r2u48e076qqoh1dmuh2n029k70s].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1r2u48e076qqoh1dmuh2n029k70s].[tmn:date:qk]' value='130' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:location:nk]' />
              <text column='[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:location:nk]' />
              <color column='[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:Forecast Indicator:nk]' />
              <text column='[federated.1r2u48e076qqoh1dmuh2n029k70s].[fVal:avg:PercentpopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r2u48e076qqoh1dmuh2n029k70s].[fVal:avg:PercentpopulationInfected:qk]</rows>
        <cols>[federated.1r2u48e076qqoh1dmuh2n029k70s].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{69A087B7-3152-4CA9-8106-67D50E56DEAA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98306' id='8' param='horz' type-v2='layout-flow' w='99064' x='468' y='847'>
            <zone h='98306' id='6' type-v2='layout-basic' w='86308' x='468' y='847'>
              <zone h='12606' id='3' name='Sheet 1' w='41663' x='45113' y='847'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49153' id='5' name='Sheet 2' w='44645' x='468' y='13453'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='85700' id='10' name='Sheet 3' w='41663' x='45113' y='13453'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36547' id='12' name='Sheet 4' w='44645' x='468' y='62606'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12606' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:location:nk]&#10;[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:Forecast Indicator:nk]' type-v2='color' w='44645' x='468' y='847'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='218' h='98306' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='12756' x='86776' y='847'>
              <zone h='17584' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.048ebbn1of0jio1g41jm102nvqko].[none:location:nk]' type-v2='color' w='12756' x='86776' y='847'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6885' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.06q2qmp08ehbbt1g8wix80aev5na].[sum:PercentpopulationInfected:qk]' type-v2='color' w='12756' x='86776' y='18431'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98306' id='14' param='vert' type-v2='layout-flow' w='99064' x='468' y='847'>
                <zone fixed-size='93' h='12606' id='3' is-fixed='true' name='Sheet 1' w='41663' x='45113' y='847'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49153' id='5' is-fixed='true' name='Sheet 2' w='44645' x='468' y='13453'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17584' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.048ebbn1of0jio1g41jm102nvqko].[none:location:nk]' type-v2='color' w='12756' x='86776' y='847'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='85700' id='10' is-fixed='true' name='Sheet 3' w='41663' x='45113' y='13453'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6885' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.06q2qmp08ehbbt1g8wix80aev5na].[sum:PercentpopulationInfected:qk]' type-v2='color' w='12756' x='86776' y='18431'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36547' id='12' is-fixed='true' name='Sheet 4' w='44645' x='468' y='62606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12606' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:location:nk]&#10;[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:Forecast Indicator:nk]' type-v2='color' w='44645' x='468' y='847'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D3D3698F-CD08-4287-B9AD-ADF23EA6FC7D}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mi4hnz0an8zll192lcu71mvo2fv].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02844C87-03AB-4244-99ED-D11A691596F9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.048ebbn1of0jio1g41jm102nvqko].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.048ebbn1of0jio1g41jm102nvqko].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFB55AAC-2A87-4BA4-B8C1-E9F966F8B445}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06q2qmp08ehbbt1g8wix80aev5na].[sum:PercentpopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06q2qmp08ehbbt1g8wix80aev5na].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8F2E114-A17C-4571-9BFA-239345DB332D}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:location:nk]&#10;[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:Forecast Indicator:nk]</field>
            <field>[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:location:nk]</field>
            <field>[federated.1r2u48e076qqoh1dmuh2n029k70s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F80F8400-8AB7-4036-BDB3-4C78920A33BE}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.048ebbn1of0jio1g41jm102nvqko].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:Forecast Indicator:nk]</field>
              <field>[federated.1r2u48e076qqoh1dmuh2n029k70s].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AEC68411-C60B-4711-83DF-A6481C895BB4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      /w9pPB76jHwT/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='69' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      /wPoI6JjWMGIugAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      Nl4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
